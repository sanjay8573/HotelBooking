@{ 

    int nr = ViewBag.nRooms;
    int totalBookedRoom = ViewBag.AllocatedRoomModel.Length;
}
<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 pull-left table-responsive">


    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12 pull-left">&nbsp;</div>
    <table class="table table-bordered">
        <tbody>
            <thead>
                <tr><td>
    <input class="styled-checkbox" id="isPreUpgraded" checked="@ViewBag.isUpGraded" onclick="getAllRoomsTypes();" type="checkbox" name="CHK_UPGRADE">
    <label for="isPreUpgraded"> UpGrade</label>
</td></tr>
            </thead>
        <tbody>
            @if (ViewBag.nRooms != null)
            {
                if (ViewBag.nRooms > 0)
                {
                    <tr>
                        <th colspan="4" class="text-left">Allocation Pending</th>
                       
                    </tr>
                    <tr class="trthbgclr">
                        <th class="text-center">#</th>
                        <th class="text-center">Room</th>
                        <th class="text-center">Floor</th>
                        <th class="text-center">Allocate</th>
                    </tr>
                }
                int k = 1 + totalBookedRoom;
                for (int i = 0; i < nr; i++)
                {

                    var selname = "RoomSelType" + i.ToString();
                    var flrname = "floor" + i.ToString();
                    <tr class="active">
                        <td> Room @k</td>

                        <td align="center" valign="middle">
                            <select id="@selname" required=required name="@selname" onchange="GetSelectedTextValue('@i',this);" class="full-width ddselect ValidateInput" valType="DropDown" runat="server">
                                
                                @if (ViewBag.RMComboModel != null)
                                {
                                    foreach (var item in ViewBag.RMComboModel)
                                    {
                                        if (item.Text != null)
                                        {
                                            <option value="@item.Value" selected="@item.Selected">
                                                @item.Text
                                            </option>

                                        }
                                    }
                                }
                            </select>

                        </td>


                        <td align="center" valign="middle" id="@flrname"></td>
                        <td align="center" valign="middle">

                            <button type="button" class="allbtnin" onclick="return AllocateRoom('@selname');">Allocate</button>

                        </td>
                    </tr>
                    k++;
                }

            }



        </tbody>
    </table>
    <table class="table table-bordered">
        <tbody>


            @if (ViewBag.AllocatedRoomModel != null)
            {
                if (totalBookedRoom > 0)
                {
                    <tr>
                        <th colspan="5" class="text-left">Allocated Room(s)</th>

                    </tr>
                    <tr class="trthbgclr">
                        <th class="text-center">#</th>
                        <th class="text-center">RoomNumber</th>
                        <th class="text-center">RoomType</th>
                        <th class="text-center">Floor</th>
                        <th class="text-center">Expected Checkout</th>
                    </tr>
                }
                int k = 1;
                foreach (var bk in ViewBag.AllocatedRoomModel)
                {



                    <tr class="active">
                        <td> Room @k</td>
                        <td align="center" valign="middle">@bk.RoomNumber</td>
                        <td align="center" valign="middle"> @bk.RoomTypeName</td>
                        <td align="center" valign="middle"> @bk.FloorName</td>
                        <td align="center" valign="middle">@bk.CheckOut</td>
                    </tr>
                    k++;
                }

            }



        </tbody>
    </table>
</div>

<script>
    $(document).ready(function () {

        var RoomSelected = [];
        $("input").attr("autocomplete", "none");
        $(".ValidateInput").on("blur", function () {
            validateField(this);
        });
        $("#btnAllocateRoom1234").on("click", function () {
            console.log("Allocating Rooms.....");
            const pmtType = $("#RoomType option:selected").text().replace(/[\n\r]+/g, ' ').trim();;
            var rmTxtAryy = pmtType.split("-");
            console.log(rmTxtAryy);
            const RoomId = $("#RoomType option:selected").val();
            var rmids = RoomId.split("-");
            console.log(rmids);
            const RoomNumber = rmTxtAryy[1];
            const CustomerName = $("#GuestName").val();

            const RoomTypeId = $("#RoomTypeId").val();
            const RoomTypeName = rmTxtAryy[0].replace(/[\n\r]+/g, ' ').trim();;

            const CheckIn = $("#cinDate").val();
            const CheckOut = $("#coutDate").val();
            const BookingId = $("#BookingId").val();
            const BranchId = $("#BranchId").val();
            const BookedRoomitem = {
                BookingId: parseInt(BookingId),
                RoomId: parseInt(rmids[0]),
                CustomerName: CustomerName,
                RoomTypeId: parseInt(RoomTypeId),
                RoomTypeName: RoomTypeName,
                FloorId:parseInt(rmids[1]),
                FloorName: rmTxtAryy[2],
                CheckIn: CheckIn,
                CheckOut: CheckOut,
                RoomNumber: RoomNumber,
                BranchId: parseInt(BranchId),
                isActive: 1
            };
            console.log(BookedRoomitem);
           

            fetch('/home/SaveAllocatedRoom', {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(BookedRoomitem)
            })
                .then(() => {

                    $.toast({
                        heading: 'Success',
                        text: 'Room Allocated Successfully ',
                        icon: 'success',
                        loader: false,        // Change it to false to disable loader
                        position: 'top-right',
                        loaderBg: '#9EC600'  // To change the background
                    });
                    $("#AllocateRoomLink").click();
                })
                .catch(error => {
                    $.toast({
                        autoDismiss: true,
                        heading: 'Error',
                        text: 'Error on Allocating Room',
                        icon: 'warning',
                        position: 'top-right',
                        loader: false,        // Change it to false to disable loader
                        loaderBg: '#9EC600'  // To change the background
                    });
                });


        });


    });

    function getSelected() {
        
        $('RoomSelType').each(function () {

            var selected = $(this + " option:selected").text();
            console.log(selected)
            

        })
    }
    function AllocateRoom(selId) {
        const pmtType = $('#' + selId + " option:selected").text().replace(/[\n\r]+/g, ' ').trim();
        console.log(pmtType);
        const RoomId = $('#' + selId + " option:selected").val();
        var rmids = RoomId.split("-");
        var rmTxtAryy = pmtType.split("-");

        //const rmTxtAryy1 = rmTxtAryy[0].split("~");;
        const RoomNumber = rmTxtAryy[1];


        const CustomerName = $("#GuestName").val().replace(/[\n\r]+/g, ' ').trim();;
        console.log("Allocating Rooms.....");
        if (Number(RoomNumber)<=0) {
            return false; // Prevent form submission if validation fails
        } else {
           

            

            const RoomTypeId = $("#RoomTypeId").val();
            const RoomTypeName = rmTxtAryy[0].replace(/[\n\r]+/g, ' ').trim();;

            const CheckIn = $("#cinDate").val();
            const CheckOut = $("#coutDate").val();
            const BookingId = $("#BookingId").val();
            const BranchId = $("#BranchId").val();
            var isUpgraded = $("#isPreUpgraded").is(":checked");
            const BookedRoomitem = {
                BookingId: parseInt(BookingId),
                RoomId: parseInt(rmids[0]),
                CustomerName: CustomerName,
                RoomTypeId: parseInt(RoomTypeId),
                RoomTypeName: RoomTypeName,
                FloorId: parseInt(rmids[1]),
                FloorName: rmTxtAryy[2],
                CheckIn: CheckIn,
                CheckOut: CheckOut,
                RoomNumber: RoomNumber,
                BranchId: parseInt(BranchId),
                isActive: 1,
                isPreUpgraded: isUpgraded
            };

            console.log(BookedRoomitem);

            fetch('/Home/SaveAllocatedRoom', {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(BookedRoomitem)
            })
                .then(() => {

                    $.toast({
                        heading: 'Success',
                        text: 'Room Allocated Successfully ',
                        icon: 'success',
                        loader: false,        // Change it to false to disable loader
                        position: 'top-right',
                        loaderBg: '#9EC600'  // To change the background
                    });
                    $("#AllocateRoomLink").click();
                })
                .catch(error => {
                    $.toast({
                        autoDismiss: true,
                        heading: 'Error',
                        text: 'Error on Allocating Room',
                        icon: 'warning',
                        position: 'top-right',
                        loader: false,        // Change it to false to disable loader
                        loaderBg: '#9EC600'  // To change the background
                    });
                });

        }
    
    }
    function GetSelectedTextValue(idn, ddlSelect) {
        var selectedText = ddlSelect.options[ddlSelect.selectedIndex].innerHTML;
        var selectedVal = ddlSelect.options[ddlSelect.selectedIndex].value;

        const pmtType = $("#RoomType option:selected").text().replace(/[\n\r]+/g, ' ').trim();;
        var rmTxtAryy = selectedText.split("-");
       
        const dtflr = "floor" + idn;
        $("#" + dtflr).text(rmTxtAryy[2].trim());
        console.log(idn + "   " + rmTxtAryy[1].trim() + "  " + dtflr + " Room Id   " + selectedVal);
    }

    $("#isPreUpgraded").change(function () {
        if (this.checked) {
            UpdatetoAvailableRooms('true');
        } else {
            UpdatetoAvailableRooms('false');
        }
    });
</script>