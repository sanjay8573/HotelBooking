@model HotelBooking.Model.Coupon
@{
    ViewBag.Title = "AddCoupon";
}

<div class="row" id="AddCoupon">
    <div class="col-sm-12">
        <div class="card widget-container">
            <div class="heading"> <i class="fa fa-bar-chart-o"></i> Add Coupon </div>
            <div class="widget-content padded text-center">
                <div class="row">
                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12 table-responsive pull-left">
                        @using (Html.BeginForm("SaveCoupon", "Home", FormMethod.Post, new { id = "msform", enctype = "multipart/form-data" }))
                        {
                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 pull-left">
                                <label for="edit-mail" class="form-required">Offer Title</label>

                                @Html.TextBoxFor(m => m.Title, new { @class = "full-width ValidateInput", placeholder = "Title", maxlength = "50" })
                                @Html.HiddenFor(model => model.CouponId)
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 pull-left">
                                <label for="edit-mail" class="form-required">Discription</label>

                                @Html.TextAreaFor(m => m.Description, new { @class = "full-width", placeholder = "Description", id = "checkoutmessage", maxlength = "200" })
                            </div>

                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 pull-left">
                                <label for="edit-mail" class="form-required">Offer Strat from</label>
                                <input  type="text" id="CouponPeriod1" class = "full-width ValidateInput" value="@Model.CouponPeriod" placeholder = "Offer Strat from " />
                                @Html.HiddenFor(m => m.CouponPeriod)
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 pull-left">
                                <label for="edit-mail" class="form-required">Offer Valid till</label>
                                <input type="text" id="CouponPeriodEnd1" class="full-width ValidateInput" value="@Model.CouponPeriodEnd.ToString("MM-dd-yyyy")" placeholder="Offer Valid till " />
                                @Html.HiddenFor(m => m.CouponPeriodEnd)

                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 pull-left">
                                <label for="edit-mail" class="form-required">Coupon Code</label>
                                @Html.TextBoxFor(m => m.CouponCode, new { @class = "full-width ValidateInput", placeholder = "Coupon Code ", maxlength = "10" })
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 pull-left">
                                <label for="edit-mail" class="form-required">Coupon Value(Fixed)</label>
                                @Html.TextBoxFor(m => m.CouponValue, new { @class = "full-width ValidateInput", placeholder = "Coupon Value ", maxlength = "5", valType = "NumbersOnly" })
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 pull-left">
                                <label for="edit-mail" class="form-required">Minimum Biiling Amount</label>
                                @Html.TextBoxFor(m => m.MinimumAmount, new { @class = "full-width ValidateInput", placeholder = "Minimum Amount ", maxlength = "5", valType = "NumbersOnly" })
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 pull-left">
                                <label for="edit-mail" class="form-required">Maximum Billing Amount</label>
                                @Html.TextBoxFor(m => m.MaximumAmount, new { @class = "full-width ValidateInput", placeholder = "Maximum Amount ", maxlength = "5", valType = "NumbersOnly" })
                            </div>
                            <fieldset>
                                <legend>Include Room Type:</legend>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 pull-left">
                                    <label for="edit-mail" class="form-required"></label>

                                    <ul class="unstyled">
                                        @foreach (var item1 in ViewBag.RTModel)
                                        {
                                            <li>

                                                <input class="styled-checkbox" type="checkbox" value="@item1.RoomTypeId" name="CHK_RT" id="@item1.RoomTypeId" />


                                                <label for="@item1.RoomTypeId">@Html.Raw(@item1.Title)</label>
                                            </li>
                                        }
                                        @Html.HiddenFor(model => model.IncludedRoomType)
                                    </ul>
                                </div>
                                </fieldset>
                                <fieldset>
                                    <legend>Include Paid Services:</legend>
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 pull-left">
                                        <label for="edit-mail" class="form-required"></label>
                                        <ul class="unstyled">
                                            @foreach (var item in ViewBag.PSModel)
                                            {
                                                <li>

                                                    <input class="styled-checkbox" type="checkbox" value="@item.PaidServiceId" name="CHK_PS" id="@item.Title" />


                                                    <label for="@item.Title">@Html.Raw(@item.Title)</label>
                                                </li>
                                            }
                                            @Html.HiddenFor(model => model.PaidServices)
                                            @Html.HiddenFor(model => model.BranchId)
                                        </ul>
                                    </div>
                                </fieldset>
                                <fieldset>
                                    <legend>Applied To(Tier):</legend>
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 pull-left">
                                        <label for="edit-mail" class="form-required"></label>

                                        <ul class="unstyled">
                                            @foreach (var item1 in ViewBag.StaffModel)
                                            {
                                                <li>

                                                    <input class="styled-checkbox" type="checkbox" value="@item1.StaffTierId" name="CHK_STF" id="@item1.StaffTierTitle" />


                                                    <label for="@item1.StaffTierTitle">@Html.Raw(@item1.StaffTierTitle)</label>
                                                </li>
                                            }
                                            @Html.HiddenFor(model => model.IncludedTier)
                                        </ul>
                                    </div>
                                </fieldset>
                                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 pull-left">
                                    <label for="edit-mail" class="form-required">Limit Per User</label>
                                    @Html.TextBoxFor(m => m.LimitPerUser, new { @class = "full-width", placeholder = "Limit Per User", maxlength = "3", valType = "NumbersOnly" })
                                </div>
                                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 pull-left">
                                    <label for="edit-mail" class="form-required">Limit Per Coupon</label>
                                    @Html.TextBoxFor(m => m.LimitPerCoupon, new { @class = "full-width", placeholder = "Limit Per Coupon", maxlength = "3", valType = "NumbersOnly" })
                                </div>

                                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 pull-left">
                                    <label for="edit-mail" class="form-required">Select Offer Image</label>
                                    <input type="file" id="cpImage" name="cpImage" class="full-width">
                                    <p id="error1" style="display:none; color:#FF0000;">
                                        Invalid Image Format! Image Format Must Be JPG, JPEG, PNG or GIF.
                                    </p>
                                    <p id="error2" style="display:none; color:#FF0000;">
                                        Maximum File Size Limit is 1MB.
                                    </p>
                                </div>
                                <div class="col-lg-3 col-md3-3ol-sm-6 col-xs-12 pull-left">
                                    <label for="edit-mail" class="form-required">Offer Image</label>
                                    @{
                                    if (Model != null && Model.CouponId > 0)
                                    {
                                        String img64 = Model.ImageData != null && Model.ImageData.Length > 0 ? Convert.ToBase64String(Model.ImageData) : "";
                                        String img64Url = string.Format("data:image/jpeg;base64,{0}", img64); //imagetype can be e.g. gif, jpeg, png etc.
                                            <img style="width:50px" src="@img64Url" />
                                        }
                                        @*else
                        {
                            <img style="width:50px" src="" alt="No Coupon Image" class="full-width" />
                        }*@
                                    }


                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 pull-left">
                                    <input class="styled-checkbox" type="checkbox" value="@Model.isActive" name="CHK_ACTIVE" id="CHK_ACTIVE" />


                                    <label for="CHK_ACTIVE">Active</label>
                                    @Html.HiddenFor(model => model.isActive)
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 pull-left">
                                    <input type="submit" name="SUBMIT" class="prev action-button" onclick="return UdpateSelectedValues();" value="Save" runat="server" checked="">

                                </div>
                                }
                        </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $("input").attr("autocomplete", "none");
        $(".ValidateInput").on("blur", function () {
            validateField(this);
        });
        var fDate=$("#CouponPeriod").val();
        if (fDate != null) {
            $("#CouponPeriod1").val(fDate);
        }
        var PSSelected = $('#PaidServices').val().split(",");
        var RTSelected = $('#IncludedRoomType').val().split(",");
        var STFSelected = $('#IncludedTier').val().split(",");
        $("#CouponPeriod1").datepicker({
            dateFormat: "mm-dd-yy",
            duration: "fast",
            minDate: 0,
            disabledDates: [new Date()],
            onSelect: function (selected) {
                var minDate = $(this).datepicker('getDate');
                minDate.setDate(minDate.getDate() + 1); //add one day
                $('#CouponPeriodEnd1').datepicker('option', 'minDate', minDate);
                $("#CouponPeriod1").removeClass("errRedBorder");
                $("#CouponPeriod").val($("#CouponPeriod1").val());
            }
        });
        $("#CouponPeriodEnd1").datepicker({
            dateFormat: "mm-dd-yy",
            duration: "fast",
            minDate: 0,
            disabledDates: [new Date()],
            onSelect: function (selected) {
                $("#CouponPeriodEnd").val($("#CouponPeriodEnd1").val());
                $("#CouponPeriodEnd1").removeClass("errRedBorder");
            }
            
        });
        $('input[type=checkbox]').each(function () {
            
            if (this.name == "CHK_PS") {
               
                if (PSSelected.includes(''+this.value+'')) {
                    this.checked = true;
                }
                
            }
            if (this.name == "CHK_RT") {
                if (RTSelected.includes('' + this.value + '')) {
                    this.checked = true;
                }
            }
            if (this.name == "CHK_STF") {
                if (STFSelected.includes('' + this.value + '')) {
                    this.checked = true;
                }
            }
            if (this.name == "CHK_ACTIVE") {
                
                const ic =$('#isActive').val();
                console.log(ic+ "  21 " + 'False');
                if (ic == 'True') {
                    $('#CHK_ACTIVE').prop('checked', true)
                    console.log(ic + "  2 " + this.value);
                } 
               
            }
        });
        $('#cpImage').bind('change', function () {

            var ext = $('#cpImage').val().split('.').pop().toLowerCase();
            if ($.inArray(ext, ['gif', 'png', 'jpg', 'jpeg']) == -1) {
                $('#error1').slideDown("slow");
                $('#error2').slideUp("slow");
                a = 0;
            } else {
                var picsize = (this.files[0].size);
                if (picsize > 1000000) {
                    $('#error2').slideDown("slow");
                    a = 0;
                } else {
                    a = 1;
                    $('#error2').slideUp("slow");
                }
                $('#error1').slideUp("slow");

            }
        });
    });

    function toDate(dateStr) {
        var parts = dateStr.split("-")
        return new Date(parts[2], parts[1] - 1, parts[0])
    }
    function UdpateSelectedValues(arg) {
        if (!validateBooking()) {
            return false; // Prevent form submission if validation fails
        } else {
            var abcRT = "";
            var abcPS = "";
            var abcSTF = "";
            $("#CouponPeriod").val($("#CouponPeriod1").val());
            $("#CouponPeriodEnd").val( $("#CouponPeriodEnd1").val());
            //Iterating the collection of checkboxes which checked marked
            $('input[type=checkbox]').each(function () {
                console.log(this.name)
                if (this.name == "CHK_PS") {
                    if (this.checked) {
                        abcPS = abcPS + $(this).val() + ","
                        //assign set value to hidden field
                        $('#PaidServices').val(abcPS.substring(0, abcPS.length - 1));
                    }
                }
                if (this.name == "CHK_RT") {
                    if (this.checked) {
                        abcRT = abcRT + $(this).val() + ","
                        //assign set value to hidden field
                        $('#IncludedRoomType').val(abcRT.substring(0, abcRT.length - 1));
                    }
                }
                if (this.name == "CHK_STF") {
                    if (this.checked) {
                        abcSTF = abcSTF + $(this).val() + ","
                        //assign set value to hidden field
                        $('#IncludedTier').val(abcSTF.substring(0, abcSTF.length - 1));
                    }
                }

                if (this.name == "CHK_ACTIVE") {
                    $('#isActive').val(this.checked);

                }
            });

        }

        


        


        }
</script>